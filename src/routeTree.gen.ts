/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WinnersRouteImport } from './routes/winners'
import { Route as RulesRouteImport } from './routes/rules'
import { Route as FaqRouteImport } from './routes/faq'
import { Route as ContactRouteImport } from './routes/contact'
import { Route as AdminRouteImport } from './routes/admin'
import { Route as SplatRouteImport } from './routes/$'
import { Route as IndexRouteImport } from './routes/index'
import { Route as OnboardingIndexRouteImport } from './routes/onboarding/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as CompetitionsIndexRouteImport } from './routes/competitions/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as ProfileIdRouteImport } from './routes/profile.$id'
import { Route as DashboardSectionRouteImport } from './routes/dashboard/$section'
import { Route as AuthIdRouteImport } from './routes/auth/$id'
import { Route as AdminWinnersRouteImport } from './routes/admin/winners'
import { Route as AdminProfilesRouteImport } from './routes/admin/profiles'
import { Route as AdminAnalyticsRouteImport } from './routes/admin/analytics'
import { Route as AdminUsersIndexRouteImport } from './routes/admin/users/index'
import { Route as AdminContestsIndexRouteImport } from './routes/admin/contests/index'
import { Route as AdminContestsCreateRouteImport } from './routes/admin/contests/create'
import { Route as AdminContestsAddContestRouteImport } from './routes/admin/contests/add-contest'

const WinnersRoute = WinnersRouteImport.update({
  id: '/winners',
  path: '/winners',
  getParentRoute: () => rootRouteImport,
} as any)
const RulesRoute = RulesRouteImport.update({
  id: '/rules',
  path: '/rules',
  getParentRoute: () => rootRouteImport,
} as any)
const FaqRoute = FaqRouteImport.update({
  id: '/faq',
  path: '/faq',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactRoute = ContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const SplatRoute = SplatRouteImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingIndexRoute = OnboardingIndexRouteImport.update({
  id: '/onboarding/',
  path: '/onboarding/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRouteImport,
} as any)
const CompetitionsIndexRoute = CompetitionsIndexRouteImport.update({
  id: '/competitions/',
  path: '/competitions/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRoute,
} as any)
const ProfileIdRoute = ProfileIdRouteImport.update({
  id: '/profile/$id',
  path: '/profile/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardSectionRoute = DashboardSectionRouteImport.update({
  id: '/dashboard/$section',
  path: '/dashboard/$section',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthIdRoute = AuthIdRouteImport.update({
  id: '/auth/$id',
  path: '/auth/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminWinnersRoute = AdminWinnersRouteImport.update({
  id: '/winners',
  path: '/winners',
  getParentRoute: () => AdminRoute,
} as any)
const AdminProfilesRoute = AdminProfilesRouteImport.update({
  id: '/profiles',
  path: '/profiles',
  getParentRoute: () => AdminRoute,
} as any)
const AdminAnalyticsRoute = AdminAnalyticsRouteImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => AdminRoute,
} as any)
const AdminUsersIndexRoute = AdminUsersIndexRouteImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AdminRoute,
} as any)
const AdminContestsIndexRoute = AdminContestsIndexRouteImport.update({
  id: '/contests/',
  path: '/contests/',
  getParentRoute: () => AdminRoute,
} as any)
const AdminContestsCreateRoute = AdminContestsCreateRouteImport.update({
  id: '/contests/create',
  path: '/contests/create',
  getParentRoute: () => AdminRoute,
} as any)
const AdminContestsAddContestRoute = AdminContestsAddContestRouteImport.update({
  id: '/contests/add-contest',
  path: '/contests/add-contest',
  getParentRoute: () => AdminRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/admin': typeof AdminRouteWithChildren
  '/contact': typeof ContactRoute
  '/faq': typeof FaqRoute
  '/rules': typeof RulesRoute
  '/winners': typeof WinnersRoute
  '/admin/analytics': typeof AdminAnalyticsRoute
  '/admin/profiles': typeof AdminProfilesRoute
  '/admin/winners': typeof AdminWinnersRoute
  '/auth/$id': typeof AuthIdRoute
  '/dashboard/$section': typeof DashboardSectionRoute
  '/profile/$id': typeof ProfileIdRoute
  '/admin/': typeof AdminIndexRoute
  '/competitions': typeof CompetitionsIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/onboarding': typeof OnboardingIndexRoute
  '/admin/contests/add-contest': typeof AdminContestsAddContestRoute
  '/admin/contests/create': typeof AdminContestsCreateRoute
  '/admin/contests': typeof AdminContestsIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/contact': typeof ContactRoute
  '/faq': typeof FaqRoute
  '/rules': typeof RulesRoute
  '/winners': typeof WinnersRoute
  '/admin/analytics': typeof AdminAnalyticsRoute
  '/admin/profiles': typeof AdminProfilesRoute
  '/admin/winners': typeof AdminWinnersRoute
  '/auth/$id': typeof AuthIdRoute
  '/dashboard/$section': typeof DashboardSectionRoute
  '/profile/$id': typeof ProfileIdRoute
  '/admin': typeof AdminIndexRoute
  '/competitions': typeof CompetitionsIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/onboarding': typeof OnboardingIndexRoute
  '/admin/contests/add-contest': typeof AdminContestsAddContestRoute
  '/admin/contests/create': typeof AdminContestsCreateRoute
  '/admin/contests': typeof AdminContestsIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/admin': typeof AdminRouteWithChildren
  '/contact': typeof ContactRoute
  '/faq': typeof FaqRoute
  '/rules': typeof RulesRoute
  '/winners': typeof WinnersRoute
  '/admin/analytics': typeof AdminAnalyticsRoute
  '/admin/profiles': typeof AdminProfilesRoute
  '/admin/winners': typeof AdminWinnersRoute
  '/auth/$id': typeof AuthIdRoute
  '/dashboard/$section': typeof DashboardSectionRoute
  '/profile/$id': typeof ProfileIdRoute
  '/admin/': typeof AdminIndexRoute
  '/competitions/': typeof CompetitionsIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/onboarding/': typeof OnboardingIndexRoute
  '/admin/contests/add-contest': typeof AdminContestsAddContestRoute
  '/admin/contests/create': typeof AdminContestsCreateRoute
  '/admin/contests/': typeof AdminContestsIndexRoute
  '/admin/users/': typeof AdminUsersIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$'
    | '/admin'
    | '/contact'
    | '/faq'
    | '/rules'
    | '/winners'
    | '/admin/analytics'
    | '/admin/profiles'
    | '/admin/winners'
    | '/auth/$id'
    | '/dashboard/$section'
    | '/profile/$id'
    | '/admin/'
    | '/competitions'
    | '/dashboard'
    | '/onboarding'
    | '/admin/contests/add-contest'
    | '/admin/contests/create'
    | '/admin/contests'
    | '/admin/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$'
    | '/contact'
    | '/faq'
    | '/rules'
    | '/winners'
    | '/admin/analytics'
    | '/admin/profiles'
    | '/admin/winners'
    | '/auth/$id'
    | '/dashboard/$section'
    | '/profile/$id'
    | '/admin'
    | '/competitions'
    | '/dashboard'
    | '/onboarding'
    | '/admin/contests/add-contest'
    | '/admin/contests/create'
    | '/admin/contests'
    | '/admin/users'
  id:
    | '__root__'
    | '/'
    | '/$'
    | '/admin'
    | '/contact'
    | '/faq'
    | '/rules'
    | '/winners'
    | '/admin/analytics'
    | '/admin/profiles'
    | '/admin/winners'
    | '/auth/$id'
    | '/dashboard/$section'
    | '/profile/$id'
    | '/admin/'
    | '/competitions/'
    | '/dashboard/'
    | '/onboarding/'
    | '/admin/contests/add-contest'
    | '/admin/contests/create'
    | '/admin/contests/'
    | '/admin/users/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SplatRoute: typeof SplatRoute
  AdminRoute: typeof AdminRouteWithChildren
  ContactRoute: typeof ContactRoute
  FaqRoute: typeof FaqRoute
  RulesRoute: typeof RulesRoute
  WinnersRoute: typeof WinnersRoute
  AuthIdRoute: typeof AuthIdRoute
  DashboardSectionRoute: typeof DashboardSectionRoute
  ProfileIdRoute: typeof ProfileIdRoute
  CompetitionsIndexRoute: typeof CompetitionsIndexRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  OnboardingIndexRoute: typeof OnboardingIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/winners': {
      id: '/winners'
      path: '/winners'
      fullPath: '/winners'
      preLoaderRoute: typeof WinnersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/rules': {
      id: '/rules'
      path: '/rules'
      fullPath: '/rules'
      preLoaderRoute: typeof RulesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/faq': {
      id: '/faq'
      path: '/faq'
      fullPath: '/faq'
      preLoaderRoute: typeof FaqRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$': {
      id: '/$'
      path: '/$'
      fullPath: '/$'
      preLoaderRoute: typeof SplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/onboarding/': {
      id: '/onboarding/'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/competitions/': {
      id: '/competitions/'
      path: '/competitions'
      fullPath: '/competitions'
      preLoaderRoute: typeof CompetitionsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof AdminRoute
    }
    '/profile/$id': {
      id: '/profile/$id'
      path: '/profile/$id'
      fullPath: '/profile/$id'
      preLoaderRoute: typeof ProfileIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/$section': {
      id: '/dashboard/$section'
      path: '/dashboard/$section'
      fullPath: '/dashboard/$section'
      preLoaderRoute: typeof DashboardSectionRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/$id': {
      id: '/auth/$id'
      path: '/auth/$id'
      fullPath: '/auth/$id'
      preLoaderRoute: typeof AuthIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/winners': {
      id: '/admin/winners'
      path: '/winners'
      fullPath: '/admin/winners'
      preLoaderRoute: typeof AdminWinnersRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/profiles': {
      id: '/admin/profiles'
      path: '/profiles'
      fullPath: '/admin/profiles'
      preLoaderRoute: typeof AdminProfilesRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/analytics': {
      id: '/admin/analytics'
      path: '/analytics'
      fullPath: '/admin/analytics'
      preLoaderRoute: typeof AdminAnalyticsRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/users/': {
      id: '/admin/users/'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersIndexRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/contests/': {
      id: '/admin/contests/'
      path: '/contests'
      fullPath: '/admin/contests'
      preLoaderRoute: typeof AdminContestsIndexRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/contests/create': {
      id: '/admin/contests/create'
      path: '/contests/create'
      fullPath: '/admin/contests/create'
      preLoaderRoute: typeof AdminContestsCreateRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/contests/add-contest': {
      id: '/admin/contests/add-contest'
      path: '/contests/add-contest'
      fullPath: '/admin/contests/add-contest'
      preLoaderRoute: typeof AdminContestsAddContestRouteImport
      parentRoute: typeof AdminRoute
    }
  }
}

interface AdminRouteChildren {
  AdminAnalyticsRoute: typeof AdminAnalyticsRoute
  AdminProfilesRoute: typeof AdminProfilesRoute
  AdminWinnersRoute: typeof AdminWinnersRoute
  AdminIndexRoute: typeof AdminIndexRoute
  AdminContestsAddContestRoute: typeof AdminContestsAddContestRoute
  AdminContestsCreateRoute: typeof AdminContestsCreateRoute
  AdminContestsIndexRoute: typeof AdminContestsIndexRoute
  AdminUsersIndexRoute: typeof AdminUsersIndexRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminAnalyticsRoute: AdminAnalyticsRoute,
  AdminProfilesRoute: AdminProfilesRoute,
  AdminWinnersRoute: AdminWinnersRoute,
  AdminIndexRoute: AdminIndexRoute,
  AdminContestsAddContestRoute: AdminContestsAddContestRoute,
  AdminContestsCreateRoute: AdminContestsCreateRoute,
  AdminContestsIndexRoute: AdminContestsIndexRoute,
  AdminUsersIndexRoute: AdminUsersIndexRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SplatRoute: SplatRoute,
  AdminRoute: AdminRouteWithChildren,
  ContactRoute: ContactRoute,
  FaqRoute: FaqRoute,
  RulesRoute: RulesRoute,
  WinnersRoute: WinnersRoute,
  AuthIdRoute: AuthIdRoute,
  DashboardSectionRoute: DashboardSectionRoute,
  ProfileIdRoute: ProfileIdRoute,
  CompetitionsIndexRoute: CompetitionsIndexRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  OnboardingIndexRoute: OnboardingIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
